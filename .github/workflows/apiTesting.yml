name: CICD Pipeline for API Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      api:
        image: node:16  # Use Node.js version 16
        ports:
          - 3000:3000
        env:
          NODE_ENV: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Node.js dependencies
        run: |
          cd api
          npm install

      - name: Start API server
        run: |
          cd api
          nohup node server.js &

          # Optionally, add a delay before running tests if needed
          sleep 10  # Adjust delay as necessary

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install requests

      - name: Run tests
        run: |
          source venv/bin/activate
          python -m unittest discover -s api/testcases -p "*.py"


           # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test  # Ensure 'test' job completes before starting deployment

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     #Deployment step with password-based SSH using GitHub secret
  #     - name: Deploy to Red Hat Server
  #       uses: appleboy/ssh-action@master
  #       env:
  #         API_KEY: ${{ secrets.API_KEY }}
  #       with:
  #         host: 103.102.234.99
  #         username: root
  #         password: ${{ secrets.SSH_PASSWORD }} # Use GitHub secret for password
  #         port: 22
  #         script: |
  #           rm -rf gym
  #           git config --global user.email "scifigurmeet@gmail.com"
  #           git config --global user.name "scifigurmeet"
  #           git clone --branch api https://scifigurmeet:${{ secrets.API_KEY }}@github.com/scifigurmeet/gym.git
  #           cd gym/api
  #           npm install
  #           nohup node server.js > server.log 2>&1 &
  #           ls -l
